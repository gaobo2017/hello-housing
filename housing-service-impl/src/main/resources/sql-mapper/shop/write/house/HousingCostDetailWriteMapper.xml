<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejavashop.dao.shop.write.house.HousingCostDetailWriteDao">
  <resultMap id="HousingCostDetailResult" type="com.ejavashop.entity.house.HousingCostDetail">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="room_code_no" jdbcType="VARCHAR" property="roomCodeNo" />
    <result column="cost_id" jdbcType="INTEGER" property="costId" />
    <result column="house_id" jdbcType="INTEGER" property="houseId" />
    <result column="cost_type" jdbcType="INTEGER" property="costType" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="operation_name" jdbcType="VARCHAR" property="operationName" />
    <result column="operation_id" jdbcType="INTEGER" property="operationId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
    <select id="getHousingCostDetailCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from housing_cost_detail
		<include refid="getHousingCostListCondition" />
	</select>
      
      <!--查询该成本id     两种类型费用统计，结果一定是两条数据，按类型统计，如果没有费用 返回0元。 -->
    <select id="getHousingCostDetailSum"  parameterType="java.lang.Integer" resultType="com.ejavashop.entity.house.HousingCostDetail">
         
		SELECT
			IFNULL(cost_type, 2) AS cost_type,
			IFNULL(SUM(money), 0) AS money
		FROM
			housing_cost_detail t
		WHERE
			cost_id = #{costId,jdbcType=INTEGER}
		AND cost_type = 2
		
		UNION
		
			SELECT
				IFNULL(cost_type, 1) AS cost_type,
				IFNULL(SUM(money), 0) AS money
			FROM
				housing_cost_detail t
			WHERE
				cost_id = #{costId,jdbcType=INTEGER}
			AND cost_type = 1
	
	</select>

	<select id="getHousingCostDetailList" resultType="com.ejavashop.entity.house.HousingCostDetail">
		select * from housing_cost_detail
		<include refid="getHousingCostListCondition" />
		order by id desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
  <sql id="getHousingCostListCondition">
		<where>
		
			<if test="queryMap.q_roomCodeNo != null and queryMap.q_roomCodeNo != ''">
				and `room_code_no` like CONCAT('%',#{queryMap.q_roomCodeNo},'%')
			</if>

			<if test="queryMap.q_id != null and queryMap.q_id != ''">
				and `id` like CONCAT('%',#{queryMap.q_id},'%')
			</if>
			
	        <if test="queryMap.q_cost_type != null and queryMap.q_cost_type != ''">
				and `cost_type` =#{queryMap.q_cost_type}
			</if>
		</where>
	</sql>
  
  <sql id="Base_Column_List">
    id, cost_id, room_code_no,house_id, cost_type, money, operation_name, operation_id, remark, create_time, 
    update_time
  </sql>
 
 

  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="HousingCostDetailResult">
    select 
    <include refid="Base_Column_List" />
    from housing_cost_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    
  <delete id="deleteByHouseId" parameterType="java.lang.Integer">
    delete from housing_cost_detail
    where house_id = #{houseId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from housing_cost_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ejavashop.entity.house.HousingCostDetail">
    insert into housing_cost_detail (id, cost_id, room_code_no,house_id, 
      cost_type, money, operation_name, 
      operation_id, remark, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{costId,jdbcType=INTEGER}, #{roomCodeNo,jdbcType=VARCHAR},#{houseId,jdbcType=INTEGER}, 
      #{costType,jdbcType=INTEGER}, #{money,jdbcType=DECIMAL}, #{operationName,jdbcType=VARCHAR}, 
      #{operationId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ejavashop.entity.house.HousingCostDetail">
    insert into housing_cost_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="costId != null">
        cost_id,
      </if>
      <if test="roomCodeNo != null">
        room_code_no,
      </if>
      
      <if test="houseId != null">
        house_id,
      </if>
      <if test="costType != null">
        cost_type,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="operationName != null">
        operation_name,
      </if>
      <if test="operationId != null">
        operation_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="costId != null">
        #{costId,jdbcType=INTEGER},
      </if>
      <if test="roomCodeNo != null">
        #{roomCodeNo,jdbcType=VARCHAR},
      </if>
      
     
      <if test="houseId != null">
        #{houseId,jdbcType=INTEGER},
      </if>
      <if test="costType != null">
        #{costType,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="operationName != null">
        #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationId != null">
        #{operationId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ejavashop.entity.house.HousingCostDetail">
    update housing_cost_detail
    <set>
      <if test="costId != null">
        cost_id = #{costId,jdbcType=INTEGER},
      </if>
      <if test="houseId != null">
        house_id = #{houseId,jdbcType=INTEGER},
      </if> 
      <if test="roomCodeNo != null">
        room_code_no = #{roomCodeNo,jdbcType=VARCHAR},
      </if>
      <if test="costType != null">
        cost_type = #{costType,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="operationName != null">
        operation_name = #{operationName,jdbcType=VARCHAR},
      </if>
      <if test="operationId != null">
        operation_id = #{operationId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
       update_time =  #{updateTime,jdbcType=TIMESTAMP},
      </if>
  
      
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ejavashop.entity.house.HousingCostDetail">
    update housing_cost_detail
    set cost_id = #{costId,jdbcType=INTEGER},
      house_id = #{houseId,jdbcType=INTEGER},
      room_code_no = #{roomCodeNo,jdbcType=VARCHAR},
      cost_type = #{costType,jdbcType=INTEGER},
      money = #{money,jdbcType=DECIMAL},
      operation_name = #{operationName,jdbcType=VARCHAR},
      operation_id = #{operationId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>